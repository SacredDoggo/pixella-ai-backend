// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model User {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    username  String   @unique
    email     String   @unique
    verified  Boolean  @default(false)
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    chats    Chat[]
    password PasswordHash?
    Message  Message[]
}

model PasswordHash {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    hash      String
    createdAt DateTime @default(now())
    userId    String   @unique @db.ObjectId
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Chat {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    title     String?   @default("New Chat")
    userId    String    @db.ObjectId
    user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
    messages  Message[]
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
}

model Message {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    chatId    String   @db.ObjectId
    chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
    replyOf   String?  @db.ObjectId
    userId    String   @db.ObjectId
    user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
    role      String
    content   String[]
    createdAt DateTime @default(now())
}
